<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>K6 on cengdong的技术博客</title>
        <link>https://www.cengdong.store/tags/k6/</link>
        <description>Recent content in K6 on cengdong的技术博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Cengdong</copyright>
        <lastBuildDate>Sun, 18 May 2025 20:55:24 +0800</lastBuildDate><atom:link href="https://www.cengdong.store/tags/k6/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【K6性能测试】K6学习笔记</title>
        <link>https://www.cengdong.store/p/k6%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95k6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Sun, 18 May 2025 20:55:24 +0800</pubDate>
        
        <guid>https://www.cengdong.store/p/k6%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95k6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h2 id=&#34;什么是-k6&#34;&gt;什么是 k6
&lt;/h2&gt;&lt;p&gt;使用 k6，你可以测试应用程序和基础设施的可靠性和性能。&lt;/p&gt;
&lt;p&gt;工程团队（包括开发人员、QA 工程师、SDET 和 SRE）通常使用 k6 来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负载和性能测试&lt;/li&gt;
&lt;li&gt;浏览器性能测试&lt;/li&gt;
&lt;li&gt;性能和综合监控&lt;/li&gt;
&lt;li&gt;性能测试自动化&lt;/li&gt;
&lt;li&gt;混沌与弹性测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装-k6&#34;&gt;安装 K6
&lt;/h2&gt;&lt;p&gt;K6 有能在多种平台安装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows&lt;/li&gt;
&lt;li&gt;mac&lt;/li&gt;
&lt;li&gt;linux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除此之外，还可以通过 Docker 容器方式运行 k6&lt;/p&gt;
&lt;p&gt;目前我用的开发主力机是 mac，在 mac 上安装 k6 的途径主要是通过&lt;code&gt;homebrew&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install  k6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此外就是通过 Docker 安装 k6&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull grafana/k6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;编写第一个-k6-测试脚本&#34;&gt;编写第一个 k6 测试脚本
&lt;/h2&gt;&lt;h3 id=&#34;前提条件&#34;&gt;前提条件
&lt;/h3&gt;&lt;p&gt;要编写 k6 测试脚本，需要以下前提：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;javascript 或者 typescript 知识&lt;/li&gt;
&lt;li&gt;在电脑上安装 k6&lt;/li&gt;
&lt;li&gt;用于编写测试脚本的代码编辑器(我目前使用的是 vscode)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;k6-测试脚本的结构&#34;&gt;k6 测试脚本的结构
&lt;/h3&gt;&lt;p&gt;每个 k6 脚本都遵循一个通用结构，围绕几个核心组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认函数：这是测试逻辑所在的位置。它定义了测试将执行的操作以及在执行过程中的行为方式。它应作为脚本中的默认函数导出。&lt;/li&gt;
&lt;li&gt;imports ：您可以进口额外的 k6 模块或 JavaScript 库 (jslibs) 用于扩展脚本功能，例如发出 HTTP 请求或模拟浏览器交互。请注意，k6 并非基于 Node.js 构建，而是使用其自身的 JavaScript 运行时。与某些 npm 模块的兼容性可能有所不同。&lt;/li&gt;
&lt;li&gt;options（可选） ：允许您配置测试的执行，例如定义虚拟用户数量、测试时长或设置性能阈值。请参阅 选项以了解更多详细信息。&lt;/li&gt;
&lt;li&gt;生命周期操作（可选） ：由于您的测试可能需要在执行测试逻辑之前和/或之后运行代码，例如从文件解析数据或从 Amazon S3 下载对象， 生命周期操作允许您编写代码，作为预定义函数或在特定代码范围内，这些代码将在测试执行的不同阶段执行。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
