<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>工作心得 on cengdong的技术博客</title>
        <link>https://www.cengdong.store/categories/%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97/</link>
        <description>Recent content in 工作心得 on cengdong的技术博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Cengdong</copyright>
        <lastBuildDate>Mon, 21 Apr 2025 19:08:21 +0800</lastBuildDate><atom:link href="https://www.cengdong.store/categories/%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【工作心得】测试工作心得</title>
        <link>https://www.cengdong.store/p/%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97/</link>
        <pubDate>Mon, 21 Apr 2025 19:08:21 +0800</pubDate>
        
        <guid>https://www.cengdong.store/p/%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97/</guid>
        <description>&lt;h2 id=&#34;好的习惯&#34;&gt;好的习惯
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;提高专注力，先把在家的每日运动落实下来&lt;/li&gt;
&lt;li&gt;测试用例的编写，用 excel/xmind 以及 google sheet 如何熟练编写&lt;/li&gt;
&lt;li&gt;测试用例的编写是重要的能力，需要专项提升(一个是测试用例设计方法，一个是全面了解后端技术方案(展开测试之前问清楚)，前端技术方案也得了解啊，今天因为一个前端技术实现线上影响了一些用户)&lt;/li&gt;
&lt;li&gt;测试发现与自己预期不一样的地方，先问是什么，再问是不是 bug，最后还要试着定位到底是谁的问题&lt;/li&gt;
&lt;li&gt;考虑测试用例的时候不要仅仅考虑功能用例，还要考虑性能安全性等问题&lt;/li&gt;
&lt;li&gt;用例不是一成不变的，在测试过程中及时更新，在写测试用例的时候就要和产品同步对需求的疑问以及该改进的点&lt;/li&gt;
&lt;li&gt;工作量不要停留在沟通上，及时在 jira/tower 上更新&lt;/li&gt;
&lt;li&gt;在验证一个功能/回归一个 bug 时，要一次性验证所有的功能(相关所有平台)，防止重复返工&lt;/li&gt;
&lt;li&gt;在测试环境进行的验证可能在生产环境不一样，因为测试环境架构与生产不一致（生产可能是集群），所以测试用例也要考虑到这种情况&lt;/li&gt;
&lt;li&gt;在需求评审/测试的阶段首先要确定 UI 交互的问题(因为这是在复杂场景中改动之后需要回归最多的地方)&lt;/li&gt;
&lt;li&gt;零碎的时间主要用于英语学习而不是技术学习&lt;/li&gt;
&lt;li&gt;应该有规律的进行运动：跑步(周末黄兴公园/滨江路是更好的选择)/仰卧起坐(家里瑜伽垫，但是担心房子隔音效果不好影响室友)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自动化进阶&#34;&gt;自动化进阶
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;把一些重复的工作通过自动化解决&lt;/li&gt;
&lt;li&gt;接口封装&lt;/li&gt;
&lt;li&gt;通过diff工具快速校验测试生成的接口响应字段变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sql-进阶&#34;&gt;sql 进阶
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;常用 sql 在 navicat 中保存成查询&lt;/li&gt;
&lt;li&gt;业务需要的特殊数据用 sql 定期查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;线上回归&#34;&gt;线上回归
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基本功能需要过一遍&lt;/li&gt;
&lt;li&gt;所有可能影响的功能都需要点一点&lt;/li&gt;
&lt;li&gt;接口自动化回归？得通过 json schema 校验&lt;/li&gt;
&lt;li&gt;ui 自动化回归？得找特殊数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何快速搞懂业务&#34;&gt;如何快速搞懂业务
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;平常多用功能&lt;/li&gt;
&lt;li&gt;查看接口/接口文档(如果有的话)&lt;/li&gt;
&lt;li&gt;查看数据库表/字段的注释&lt;/li&gt;
&lt;li&gt;问同事的问题使用 typora 记录&lt;/li&gt;
&lt;li&gt;组长不在的时候，快速找到业务负责人，问清楚有哪些数据库表，怎么进行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;副业&#34;&gt;副业
&lt;/h2&gt;&lt;p&gt;最近有想法探索一点副业的方向，测试在业务开发中的地位太低了，而且互联网也确实不是很长久。准备搞短视频吧，记录生活玩玩而已。(目前做游戏副业)&lt;/p&gt;
&lt;p&gt;方向就是互联网梗相关的，因为自己也喜欢玩梗&lt;/p&gt;
&lt;p&gt;首先需要的就是视频剪辑能力，国内还是选择抖音吧&lt;/p&gt;
&lt;h2 id=&#34;工作中需要的能力&#34;&gt;工作中需要的能力
&lt;/h2&gt;&lt;h3 id=&#34;测试用例设计的高效以及功能覆盖率&#34;&gt;测试用例设计的高效以及功能覆盖率
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;功能点的 UI 校验（文字以及样式）(要学会使用 figma)&lt;/li&gt;
&lt;li&gt;功能点输入的设计&lt;/li&gt;
&lt;li&gt;功能点输出的设计&lt;/li&gt;
&lt;li&gt;功能点状态的设计(状态机转移，状态是否可重入)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;沟通能力&#34;&gt;沟通能力
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;说明问题的能力（提 bug 是否清晰：复现步骤，必要时加上录屏）&lt;/li&gt;
&lt;li&gt;请求问题（高效提问的能力）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决问题的能力&#34;&gt;解决问题的能力
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;作为一名遇到问题首先想到的是记录(因为复现的成本比较高)&lt;/li&gt;
&lt;li&gt;不能有任何侥幸的想法，还有就是接口自动化吧&lt;/li&gt;
&lt;li&gt;学习到的知识应该在工作中应用，最近学了 k6 性能测试，在工作中进行了很多应用，收获颇多，下周准备总结一下&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
